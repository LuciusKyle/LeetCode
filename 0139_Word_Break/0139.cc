
#include <assert.h>
#include <iostream>
#include <string>
#include <unordered_set>
#include <vector>

using std::string;
using std::unordered_set;
using std::vector;

class Solution {
public:
	bool wordBreak(const string s, const vector<string> &wordDict) {
#if 201402L < __clpusplus
		const unordered_set words_set(wordDict.cbegin(), wordDict.cend());
		// vector sub_string_result_table(wordDict.size(), vector(wordDict.size() + 1, false));
		vector result_table(wordDict.size(), vector(wordDict.size() + 1, 0));
#else
		const unordered_set<string> words_set(wordDict.cbegin(), wordDict.cend());
		// vector<vector<bool>> sub_string_result_table(s.size(), vector<bool>(s.size() + 1, false));
		vector<vector<int>> result_table(s.size(), vector<int>(s.size() + 1, 0));
#endif
		return wordBreak(0, s.size(), s, words_set, result_table);
	}

private:
	bool wordBreak(const size_t begin_index, const size_t end_index, const string &s, const unordered_set<string> &words_set, vector<vector<int>> &result_table) const {
		if (result_table[begin_index][end_index] != 0)
			return 0 < result_table[begin_index][end_index];
		if (0 < words_set.count({ s.cbegin() + begin_index, s.cbegin() + end_index }))
			return true;
		else
			for (size_t i = begin_index; i < end_index; ++i)
				if (wordBreak(begin_index, i, s, words_set, result_table) && wordBreak(i, end_index, s, words_set, result_table)) {
					result_table[begin_index][end_index] = 1;
					return true;
				}
				else
					result_table[begin_index][end_index] = -1;
		return false;
	}
};

int main(void) {
	string str = "abcdefghijklmnopqrstuvwxyz";

	for (auto iter = str.cbegin(); iter != str.cend(); ++iter)
		std::cout << string(str.cbegin(), iter) << ' ' << string(iter, str.cend())
		<< std::endl;

	for (size_t i = 0; i < str.size(); ++i)
		for (size_t ii = i + 1; ii <= str.size(); ++ii)
			std::cout << string(str.cbegin() + i, str.cbegin() + ii) << std::endl;

	Solution sln;
	bool rtn = sln.wordBreak("fohhemkkaecojceoaejkkoedkofhmohkcjmkggcmnami",
		{ "kfomka",
		 "hecagbngambii",
		 "anobmnikj",
		 "c",
		 "nnkmfelneemfgcl",
		 "ah",
		 "bgomgohl",
		 "lcbjbg",
		 "ebjfoiddndih",
		 "hjknoamjbfhckb",
		 "eioldlijmmla",
		 "nbekmcnakif",
		 "fgahmihodolmhbi",
		 "gnjfe",
		 "hk",
		 "b",
		 "jbfgm",
		 "ecojceoaejkkoed",
		 "cemodhmbcmgl",
		 "j",
		 "gdcnjj",
		 "kolaijoicbc",
		 "liibjjcini",
		 "lmbenj",
		 "eklingemgdjncaa",
		 "m",
		 "hkh",
		 "fblb",
		 "fk",
		 "nnfkfanaga",
		 "eldjml",
		 "iejn",
		 "gbmjfdooeeko",
		 "jafogijka",
		 "ngnfggojmhclkjd",
		 "bfagnfclg",
		 "imkeobcdidiifbm",
		 "ogeo",
		 "gicjog",
		 "cjnibenelm",
		 "ogoloc",
		 "edciifkaff",
		 "kbeeg",
		 "nebn",
		 "jdd",
		 "aeojhclmdn",
		 "dilbhl",
		 "dkk",
		 "bgmck",
		 "ohgkefkadonafg",
		 "labem",
		 "fheoglj",
		 "gkcanacfjfhogjc",
		 "eglkcddd",
		 "lelelihakeh",
		 "hhjijfiodfi",
		 "enehbibnhfjd",
		 "gkm",
		 "ggj",
		 "ag",
		 "hhhjogk",
		 "lllicdhihn",
		 "goakjjnk",
		 "lhbn",
		 "fhheedadamlnedh",
		 "bin",
		 "cl",
		 "ggjljjjf",
		 "fdcdaobhlhgj",
		 "nijlf",
		 "i",
		 "gaemagobjfc",
		 "dg",
		 "g",
		 "jhlelodgeekj",
		 "hcimohlni",
		 "fdoiohikhacgb",
		 "k",
		 "doiaigclm",
		 "bdfaoncbhfkdbjd",
		 "f",
		 "jaikbciac",
		 "cjgadmfoodmba",
		 "molokllh",
		 "gfkngeebnggo",
		 "lahd",
		 "n",
		 "ehfngoc",
		 "lejfcee",
		 "kofhmoh",
		 "cgda",
		 "de",
		 "kljnicikjeh",
		 "edomdbibhif",
		 "jehdkgmmofihdi",
		 "hifcjkloebel",
		 "gcghgbemjege",
		 "kobhhefbbb",
		 "aaikgaolhllhlm",
		 "akg",
		 "kmmikgkhnn",
		 "dnamfhaf",
		 "mjhj",
		 "ifadcgmgjaa",
		 "acnjehgkflgkd",
		 "bjj",
		 "maihjn",
		 "ojakklhl",
		 "ign",
		 "jhd",
		 "kndkhbebgh",
		 "amljjfeahcdlfdg",
		 "fnboolobch",
		 "gcclgcoaojc",
		 "kfokbbkllmcd",
		 "fec",
		 "dljma",
		 "noa",
		 "cfjie",
		 "fohhemkka",
		 "bfaldajf",
		 "nbk",
		 "kmbnjoalnhki",
		 "ccieabbnlhbjmj",
		 "nmacelialookal",
		 "hdlefnbmgklo",
		 "bfbblofk",
		 "doohocnadd",
		 "klmed",
		 "e",
		 "hkkcmbljlojkghm",
		 "jjiadlgf",
		 "ogadjhambjikce",
		 "bglghjndlk",
		 "gackokkbhj",
		 "oofohdogb",
		 "leiolllnjj",
		 "edekdnibja",
		 "gjhglilocif",
		 "ccfnfjalchc",
		 "gl",
		 "ihee",
		 "cfgccdmecem",
		 "mdmcdgjelhgk",
		 "laboglchdhbk",
		 "ajmiim",
		 "cebhalkngloae",
		 "hgohednmkahdi",
		 "ddiecjnkmgbbei",
		 "ajaengmcdlbk",
		 "kgg",
		 "ndchkjdn",
		 "heklaamafiomea",
		 "ehg",
		 "imelcifnhkae",
		 "hcgadilb",
		 "elndjcodnhcc",
		 "nkjd",
		 "gjnfkogkjeobo",
		 "eolega",
		 "lm",
		 "jddfkfbbbhia",
		 "cddmfeckheeo",
		 "bfnmaalmjdb",
		 "fbcg",
		 "ko",
		 "mojfj",
		 "kk",
		 "bbljjnnikdhg",
		 "l",
		 "calbc",
		 "mkekn",
		 "ejlhdk",
		 "hkebdiebecf",
		 "emhelbbda",
		 "mlba",
		 "ckjmih",
		 "odfacclfl",
		 "lgfjjbgookmnoe",
		 "begnkogf",
		 "gakojeblk",
		 "bfflcmdko",
		 "cfdclljcg",
		 "ho",
		 "fo",
		 "acmi",
		 "oemknmffgcio",
		 "mlkhk",
		 "kfhkndmdojhidg",
		 "ckfcibmnikn",
		 "dgoecamdliaeeoa",
		 "ocealkbbec",
		 "kbmmihb",
		 "ncikad",
		 "hi",
		 "nccjbnldneijc",
		 "hgiccigeehmdl",
		 "dlfmjhmioa",
		 "kmff",
		 "gfhkd",
		 "okiamg",
		 "ekdbamm",
		 "fc",
		 "neg",
		 "cfmo",
		 "ccgahikbbl",
		 "khhoc",
		 "elbg",
		 "cbghbacjbfm",
		 "jkagbmfgemjfg",
		 "ijceidhhajmja",
		 "imibemhdg",
		 "ja",
		 "idkfd",
		 "ndogdkjjkf",
		 "fhic",
		 "ooajkki",
		 "fdnjhh",
		 "ba",
		 "jdlnidngkfffbmi",
		 "jddjfnnjoidcnm",
		 "kghljjikbacd",
		 "idllbbn",
		 "d",
		 "mgkajbnjedeiee",
		 "fbllleanknmoomb",
		 "lom",
		 "kofjmmjm",
		 "mcdlbglonin",
		 "gcnboanh",
		 "fggii",
		 "fdkbmic",
		 "bbiln",
		 "cdjcjhonjgiagkb",
		 "kooenbeoongcle",
		 "cecnlfbaanckdkj",
		 "fejlmog",
		 "fanekdneoaammb",
		 "maojbcegdamn",
		 "bcmanmjdeabdo",
		 "amloj",
		 "adgoej",
		 "jh",
		 "fhf",
		 "cogdljlgek",
		 "o",
		 "joeiajlioggj",
		 "oncal",
		 "lbgg",
		 "elainnbffk",
		 "hbdi",
		 "femcanllndoh",
		 "ke",
		 "hmib",
		 "nagfahhljh",
		 "ibifdlfeechcbal",
		 "knec",
		 "oegfcghlgalcnno",
		 "abiefmjldmln",
		 "mlfglgni",
		 "jkofhjeb",
		 "ifjbneblfldjel",
		 "nahhcimkjhjgb",
		 "cdgkbn",
		 "nnklfbeecgedie",
		 "gmllmjbodhgllc",
		 "hogollongjo",
		 "fmoinacebll",
		 "fkngbganmh",
		 "jgdblmhlmfij",
		 "fkkdjknahamcfb",
		 "aieakdokibj",
		 "hddlcdiailhd",
		 "iajhmg",
		 "jenocgo",
		 "embdib",
		 "dghbmljjogka",
		 "bahcggjgmlf",
		 "fb",
		 "jldkcfom",
		 "mfi",
		 "kdkke",
		 "odhbl",
		 "jin",
		 "kcjmkggcmnami",
		 "kofig",
		 "bid",
		 "ohnohi",
		 "fcbojdgoaoa",
		 "dj",
		 "ifkbmbod",
		 "dhdedohlghk",
		 "nmkeakohicfdjf",
		 "ahbifnnoaldgbj",
		 "egldeibiinoac",
		 "iehfhjjjmil",
		 "bmeimi",
		 "ombngooicknel",
		 "lfdkngobmik",
		 "ifjcjkfnmgjcnmi",
		 "fmf",
		 "aoeaa",
		 "an",
		 "ffgddcjblehhggo",
		 "hijfdcchdilcl",
		 "hacbaamkhblnkk",
		 "najefebghcbkjfl",
		 "hcnnlogjfmmjcma",
		 "njgcogemlnohl",
		 "ihejh",
		 "ej",
		 "ofn",
		 "ggcklj",
		 "omah",
		 "hg",
		 "obk",
		 "giig",
		 "cklna",
		 "lihaiollfnem",
		 "ionlnlhjckf",
		 "cfdlijnmgjoebl",
		 "dloehimen",
		 "acggkacahfhkdne",
		 "iecd",
		 "gn",
		 "odgbnalk",
		 "ahfhcd",
		 "dghlag",
		 "bchfe",
		 "dldblmnbifnmlo",
		 "cffhbijal",
		 "dbddifnojfibha",
		 "mhh",
		 "cjjol",
		 "fed",
		 "bhcnf",
		 "ciiibbedklnnk",
		 "ikniooicmm",
		 "ejf",
		 "ammeennkcdgbjco",
		 "jmhmd",
		 "cek",
		 "bjbhcmda",
		 "kfjmhbf",
		 "chjmmnea",
		 "ifccifn",
		 "naedmco",
		 "iohchafbega",
		 "kjejfhbco",
		 "anlhhhhg" });
	assert(rtn);
	rtn = sln.wordBreak("leetcode", { "leet", "code" });
	assert(rtn);
	return 0;
}
